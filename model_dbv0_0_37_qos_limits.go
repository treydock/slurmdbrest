/*
 * Slurm Rest API
 *
 * API to access and control Slurm DB.
 *
 * API version: dbv0.0.37
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmdbrest

import (
	"encoding/json"
)

// Dbv0037QosLimits Assigned limits
type Dbv0037QosLimits struct {
	Max *Dbv0037QosLimitsMax `json:"max,omitempty"`
	Min *Dbv0037QosLimitsMin `json:"min,omitempty"`
}

// NewDbv0037QosLimits instantiates a new Dbv0037QosLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037QosLimits() *Dbv0037QosLimits {
	this := Dbv0037QosLimits{}
	return &this
}

// NewDbv0037QosLimitsWithDefaults instantiates a new Dbv0037QosLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037QosLimitsWithDefaults() *Dbv0037QosLimits {
	this := Dbv0037QosLimits{}
	return &this
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *Dbv0037QosLimits) GetMax() Dbv0037QosLimitsMax {
	if o == nil || o.Max == nil {
		var ret Dbv0037QosLimitsMax
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037QosLimits) GetMaxOk() (*Dbv0037QosLimitsMax, bool) {
	if o == nil || o.Max == nil {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *Dbv0037QosLimits) HasMax() bool {
	if o != nil && o.Max != nil {
		return true
	}

	return false
}

// SetMax gets a reference to the given Dbv0037QosLimitsMax and assigns it to the Max field.
func (o *Dbv0037QosLimits) SetMax(v Dbv0037QosLimitsMax) {
	o.Max = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *Dbv0037QosLimits) GetMin() Dbv0037QosLimitsMin {
	if o == nil || o.Min == nil {
		var ret Dbv0037QosLimitsMin
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037QosLimits) GetMinOk() (*Dbv0037QosLimitsMin, bool) {
	if o == nil || o.Min == nil {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *Dbv0037QosLimits) HasMin() bool {
	if o != nil && o.Min != nil {
		return true
	}

	return false
}

// SetMin gets a reference to the given Dbv0037QosLimitsMin and assigns it to the Min field.
func (o *Dbv0037QosLimits) SetMin(v Dbv0037QosLimitsMin) {
	o.Min = &v
}

func (o Dbv0037QosLimits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Max != nil {
		toSerialize["max"] = o.Max
	}
	if o.Min != nil {
		toSerialize["min"] = o.Min
	}
	return json.Marshal(toSerialize)
}

type NullableDbv0037QosLimits struct {
	value *Dbv0037QosLimits
	isSet bool
}

func (v NullableDbv0037QosLimits) Get() *Dbv0037QosLimits {
	return v.value
}

func (v *NullableDbv0037QosLimits) Set(val *Dbv0037QosLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037QosLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037QosLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037QosLimits(val *Dbv0037QosLimits) *NullableDbv0037QosLimits {
	return &NullableDbv0037QosLimits{value: val, isSet: true}
}

func (v NullableDbv0037QosLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037QosLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


