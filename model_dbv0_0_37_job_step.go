/*
 * Slurm Rest API
 *
 * API to access and control Slurm DB.
 *
 * API version: dbv0.0.37
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmdbrest

import (
	"encoding/json"
)

// Dbv0037JobStep struct for Dbv0037JobStep
type Dbv0037JobStep struct {
	Time *Dbv0037JobStepTime `json:"time,omitempty"`
	ExitCode *Dbv0037JobExitCode `json:"exit_code,omitempty"`
	Nodes *Dbv0037JobStepNodes `json:"nodes,omitempty"`
	Tasks *Dbv0037JobStepTasks `json:"tasks,omitempty"`
	// First process PID
	Pid *string `json:"pid,omitempty"`
	CPU *Dbv0037JobStepCPU `json:"CPU,omitempty"`
	// User who requested job killed
	KillRequestUser *string `json:"kill_request_user,omitempty"`
	// State of job step
	State *string `json:"state,omitempty"`
	Statistics *Dbv0037JobStepStatistics `json:"statistics,omitempty"`
	Step *Dbv0037JobStepStep `json:"step,omitempty"`
}

// NewDbv0037JobStep instantiates a new Dbv0037JobStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037JobStep() *Dbv0037JobStep {
	this := Dbv0037JobStep{}
	return &this
}

// NewDbv0037JobStepWithDefaults instantiates a new Dbv0037JobStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037JobStepWithDefaults() *Dbv0037JobStep {
	this := Dbv0037JobStep{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetTime() Dbv0037JobStepTime {
	if o == nil || o.Time == nil {
		var ret Dbv0037JobStepTime
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetTimeOk() (*Dbv0037JobStepTime, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given Dbv0037JobStepTime and assigns it to the Time field.
func (o *Dbv0037JobStep) SetTime(v Dbv0037JobStepTime) {
	o.Time = &v
}

// GetExitCode returns the ExitCode field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetExitCode() Dbv0037JobExitCode {
	if o == nil || o.ExitCode == nil {
		var ret Dbv0037JobExitCode
		return ret
	}
	return *o.ExitCode
}

// GetExitCodeOk returns a tuple with the ExitCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetExitCodeOk() (*Dbv0037JobExitCode, bool) {
	if o == nil || o.ExitCode == nil {
		return nil, false
	}
	return o.ExitCode, true
}

// HasExitCode returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasExitCode() bool {
	if o != nil && o.ExitCode != nil {
		return true
	}

	return false
}

// SetExitCode gets a reference to the given Dbv0037JobExitCode and assigns it to the ExitCode field.
func (o *Dbv0037JobStep) SetExitCode(v Dbv0037JobExitCode) {
	o.ExitCode = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetNodes() Dbv0037JobStepNodes {
	if o == nil || o.Nodes == nil {
		var ret Dbv0037JobStepNodes
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetNodesOk() (*Dbv0037JobStepNodes, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given Dbv0037JobStepNodes and assigns it to the Nodes field.
func (o *Dbv0037JobStep) SetNodes(v Dbv0037JobStepNodes) {
	o.Nodes = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetTasks() Dbv0037JobStepTasks {
	if o == nil || o.Tasks == nil {
		var ret Dbv0037JobStepTasks
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetTasksOk() (*Dbv0037JobStepTasks, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given Dbv0037JobStepTasks and assigns it to the Tasks field.
func (o *Dbv0037JobStep) SetTasks(v Dbv0037JobStepTasks) {
	o.Tasks = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetPid() string {
	if o == nil || o.Pid == nil {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetPidOk() (*string, bool) {
	if o == nil || o.Pid == nil {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasPid() bool {
	if o != nil && o.Pid != nil {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *Dbv0037JobStep) SetPid(v string) {
	o.Pid = &v
}

// GetCPU returns the CPU field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetCPU() Dbv0037JobStepCPU {
	if o == nil || o.CPU == nil {
		var ret Dbv0037JobStepCPU
		return ret
	}
	return *o.CPU
}

// GetCPUOk returns a tuple with the CPU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetCPUOk() (*Dbv0037JobStepCPU, bool) {
	if o == nil || o.CPU == nil {
		return nil, false
	}
	return o.CPU, true
}

// HasCPU returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasCPU() bool {
	if o != nil && o.CPU != nil {
		return true
	}

	return false
}

// SetCPU gets a reference to the given Dbv0037JobStepCPU and assigns it to the CPU field.
func (o *Dbv0037JobStep) SetCPU(v Dbv0037JobStepCPU) {
	o.CPU = &v
}

// GetKillRequestUser returns the KillRequestUser field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetKillRequestUser() string {
	if o == nil || o.KillRequestUser == nil {
		var ret string
		return ret
	}
	return *o.KillRequestUser
}

// GetKillRequestUserOk returns a tuple with the KillRequestUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetKillRequestUserOk() (*string, bool) {
	if o == nil || o.KillRequestUser == nil {
		return nil, false
	}
	return o.KillRequestUser, true
}

// HasKillRequestUser returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasKillRequestUser() bool {
	if o != nil && o.KillRequestUser != nil {
		return true
	}

	return false
}

// SetKillRequestUser gets a reference to the given string and assigns it to the KillRequestUser field.
func (o *Dbv0037JobStep) SetKillRequestUser(v string) {
	o.KillRequestUser = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Dbv0037JobStep) SetState(v string) {
	o.State = &v
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetStatistics() Dbv0037JobStepStatistics {
	if o == nil || o.Statistics == nil {
		var ret Dbv0037JobStepStatistics
		return ret
	}
	return *o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetStatisticsOk() (*Dbv0037JobStepStatistics, bool) {
	if o == nil || o.Statistics == nil {
		return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasStatistics() bool {
	if o != nil && o.Statistics != nil {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given Dbv0037JobStepStatistics and assigns it to the Statistics field.
func (o *Dbv0037JobStep) SetStatistics(v Dbv0037JobStepStatistics) {
	o.Statistics = &v
}

// GetStep returns the Step field value if set, zero value otherwise.
func (o *Dbv0037JobStep) GetStep() Dbv0037JobStepStep {
	if o == nil || o.Step == nil {
		var ret Dbv0037JobStepStep
		return ret
	}
	return *o.Step
}

// GetStepOk returns a tuple with the Step field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStep) GetStepOk() (*Dbv0037JobStepStep, bool) {
	if o == nil || o.Step == nil {
		return nil, false
	}
	return o.Step, true
}

// HasStep returns a boolean if a field has been set.
func (o *Dbv0037JobStep) HasStep() bool {
	if o != nil && o.Step != nil {
		return true
	}

	return false
}

// SetStep gets a reference to the given Dbv0037JobStepStep and assigns it to the Step field.
func (o *Dbv0037JobStep) SetStep(v Dbv0037JobStepStep) {
	o.Step = &v
}

func (o Dbv0037JobStep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.ExitCode != nil {
		toSerialize["exit_code"] = o.ExitCode
	}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.Pid != nil {
		toSerialize["pid"] = o.Pid
	}
	if o.CPU != nil {
		toSerialize["CPU"] = o.CPU
	}
	if o.KillRequestUser != nil {
		toSerialize["kill_request_user"] = o.KillRequestUser
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Statistics != nil {
		toSerialize["statistics"] = o.Statistics
	}
	if o.Step != nil {
		toSerialize["step"] = o.Step
	}
	return json.Marshal(toSerialize)
}

type NullableDbv0037JobStep struct {
	value *Dbv0037JobStep
	isSet bool
}

func (v NullableDbv0037JobStep) Get() *Dbv0037JobStep {
	return v.value
}

func (v *NullableDbv0037JobStep) Set(val *Dbv0037JobStep) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037JobStep) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037JobStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037JobStep(val *Dbv0037JobStep) *NullableDbv0037JobStep {
	return &NullableDbv0037JobStep{value: val, isSet: true}
}

func (v NullableDbv0037JobStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037JobStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


