/*
 * Slurm Rest API
 *
 * API to access and control Slurm DB.
 *
 * API version: dbv0.0.37
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmdbrest

import (
	"encoding/json"
)

// Dbv0037AssociationShortInfo struct for Dbv0037AssociationShortInfo
type Dbv0037AssociationShortInfo struct {
	// Account name
	Account *string `json:"account,omitempty"`
	// Cluster name
	Cluster *string `json:"cluster,omitempty"`
	// Partition name (optional)
	Partition *string `json:"partition,omitempty"`
	// User name
	User *string `json:"user,omitempty"`
}

// NewDbv0037AssociationShortInfo instantiates a new Dbv0037AssociationShortInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037AssociationShortInfo() *Dbv0037AssociationShortInfo {
	this := Dbv0037AssociationShortInfo{}
	return &this
}

// NewDbv0037AssociationShortInfoWithDefaults instantiates a new Dbv0037AssociationShortInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037AssociationShortInfoWithDefaults() *Dbv0037AssociationShortInfo {
	this := Dbv0037AssociationShortInfo{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Dbv0037AssociationShortInfo) GetAccount() string {
	if o == nil || o.Account == nil {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationShortInfo) GetAccountOk() (*string, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *Dbv0037AssociationShortInfo) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *Dbv0037AssociationShortInfo) SetAccount(v string) {
	o.Account = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Dbv0037AssociationShortInfo) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationShortInfo) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *Dbv0037AssociationShortInfo) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *Dbv0037AssociationShortInfo) SetCluster(v string) {
	o.Cluster = &v
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *Dbv0037AssociationShortInfo) GetPartition() string {
	if o == nil || o.Partition == nil {
		var ret string
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationShortInfo) GetPartitionOk() (*string, bool) {
	if o == nil || o.Partition == nil {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *Dbv0037AssociationShortInfo) HasPartition() bool {
	if o != nil && o.Partition != nil {
		return true
	}

	return false
}

// SetPartition gets a reference to the given string and assigns it to the Partition field.
func (o *Dbv0037AssociationShortInfo) SetPartition(v string) {
	o.Partition = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Dbv0037AssociationShortInfo) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationShortInfo) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Dbv0037AssociationShortInfo) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *Dbv0037AssociationShortInfo) SetUser(v string) {
	o.User = &v
}

func (o Dbv0037AssociationShortInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Partition != nil {
		toSerialize["partition"] = o.Partition
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableDbv0037AssociationShortInfo struct {
	value *Dbv0037AssociationShortInfo
	isSet bool
}

func (v NullableDbv0037AssociationShortInfo) Get() *Dbv0037AssociationShortInfo {
	return v.value
}

func (v *NullableDbv0037AssociationShortInfo) Set(val *Dbv0037AssociationShortInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037AssociationShortInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037AssociationShortInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037AssociationShortInfo(val *Dbv0037AssociationShortInfo) *NullableDbv0037AssociationShortInfo {
	return &NullableDbv0037AssociationShortInfo{value: val, isSet: true}
}

func (v NullableDbv0037AssociationShortInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037AssociationShortInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


