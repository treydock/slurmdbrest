/*
 * Slurm Rest API
 *
 * API to access and control Slurm DB.
 *
 * API version: dbv0.0.37
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmdbrest

import (
	"encoding/json"
)

// Dbv0037JobStepCPU CPU properties
type Dbv0037JobStepCPU struct {
	RequestedFrequency *Dbv0037JobStepCPURequestedFrequency `json:"requested_frequency,omitempty"`
	// CPU governor
	Governor *[]string `json:"governor,omitempty"`
}

// NewDbv0037JobStepCPU instantiates a new Dbv0037JobStepCPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037JobStepCPU() *Dbv0037JobStepCPU {
	this := Dbv0037JobStepCPU{}
	return &this
}

// NewDbv0037JobStepCPUWithDefaults instantiates a new Dbv0037JobStepCPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037JobStepCPUWithDefaults() *Dbv0037JobStepCPU {
	this := Dbv0037JobStepCPU{}
	return &this
}

// GetRequestedFrequency returns the RequestedFrequency field value if set, zero value otherwise.
func (o *Dbv0037JobStepCPU) GetRequestedFrequency() Dbv0037JobStepCPURequestedFrequency {
	if o == nil || o.RequestedFrequency == nil {
		var ret Dbv0037JobStepCPURequestedFrequency
		return ret
	}
	return *o.RequestedFrequency
}

// GetRequestedFrequencyOk returns a tuple with the RequestedFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStepCPU) GetRequestedFrequencyOk() (*Dbv0037JobStepCPURequestedFrequency, bool) {
	if o == nil || o.RequestedFrequency == nil {
		return nil, false
	}
	return o.RequestedFrequency, true
}

// HasRequestedFrequency returns a boolean if a field has been set.
func (o *Dbv0037JobStepCPU) HasRequestedFrequency() bool {
	if o != nil && o.RequestedFrequency != nil {
		return true
	}

	return false
}

// SetRequestedFrequency gets a reference to the given Dbv0037JobStepCPURequestedFrequency and assigns it to the RequestedFrequency field.
func (o *Dbv0037JobStepCPU) SetRequestedFrequency(v Dbv0037JobStepCPURequestedFrequency) {
	o.RequestedFrequency = &v
}

// GetGovernor returns the Governor field value if set, zero value otherwise.
func (o *Dbv0037JobStepCPU) GetGovernor() []string {
	if o == nil || o.Governor == nil {
		var ret []string
		return ret
	}
	return *o.Governor
}

// GetGovernorOk returns a tuple with the Governor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStepCPU) GetGovernorOk() (*[]string, bool) {
	if o == nil || o.Governor == nil {
		return nil, false
	}
	return o.Governor, true
}

// HasGovernor returns a boolean if a field has been set.
func (o *Dbv0037JobStepCPU) HasGovernor() bool {
	if o != nil && o.Governor != nil {
		return true
	}

	return false
}

// SetGovernor gets a reference to the given []string and assigns it to the Governor field.
func (o *Dbv0037JobStepCPU) SetGovernor(v []string) {
	o.Governor = &v
}

func (o Dbv0037JobStepCPU) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestedFrequency != nil {
		toSerialize["requested_frequency"] = o.RequestedFrequency
	}
	if o.Governor != nil {
		toSerialize["governor"] = o.Governor
	}
	return json.Marshal(toSerialize)
}

type NullableDbv0037JobStepCPU struct {
	value *Dbv0037JobStepCPU
	isSet bool
}

func (v NullableDbv0037JobStepCPU) Get() *Dbv0037JobStepCPU {
	return v.value
}

func (v *NullableDbv0037JobStepCPU) Set(val *Dbv0037JobStepCPU) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037JobStepCPU) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037JobStepCPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037JobStepCPU(val *Dbv0037JobStepCPU) *NullableDbv0037JobStepCPU {
	return &NullableDbv0037JobStepCPU{value: val, isSet: true}
}

func (v NullableDbv0037JobStepCPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037JobStepCPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


