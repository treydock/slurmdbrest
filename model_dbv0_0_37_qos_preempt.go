/*
 * Slurm Rest API
 *
 * API to access and control Slurm DB.
 *
 * API version: dbv0.0.37
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmdbrest

import (
	"encoding/json"
)

// Dbv0037QosPreempt Preemption settings
type Dbv0037QosPreempt struct {
	// List of preemptable QOS
	List *[]string `json:"list,omitempty"`
	// List of preemption modes
	Mode *[]string `json:"mode,omitempty"`
	// Grace period (s) before jobs can preempted
	ExemptTime *int32 `json:"exempt_time,omitempty"`
}

// NewDbv0037QosPreempt instantiates a new Dbv0037QosPreempt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037QosPreempt() *Dbv0037QosPreempt {
	this := Dbv0037QosPreempt{}
	return &this
}

// NewDbv0037QosPreemptWithDefaults instantiates a new Dbv0037QosPreempt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037QosPreemptWithDefaults() *Dbv0037QosPreempt {
	this := Dbv0037QosPreempt{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *Dbv0037QosPreempt) GetList() []string {
	if o == nil || o.List == nil {
		var ret []string
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037QosPreempt) GetListOk() (*[]string, bool) {
	if o == nil || o.List == nil {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *Dbv0037QosPreempt) HasList() bool {
	if o != nil && o.List != nil {
		return true
	}

	return false
}

// SetList gets a reference to the given []string and assigns it to the List field.
func (o *Dbv0037QosPreempt) SetList(v []string) {
	o.List = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *Dbv0037QosPreempt) GetMode() []string {
	if o == nil || o.Mode == nil {
		var ret []string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037QosPreempt) GetModeOk() (*[]string, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *Dbv0037QosPreempt) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given []string and assigns it to the Mode field.
func (o *Dbv0037QosPreempt) SetMode(v []string) {
	o.Mode = &v
}

// GetExemptTime returns the ExemptTime field value if set, zero value otherwise.
func (o *Dbv0037QosPreempt) GetExemptTime() int32 {
	if o == nil || o.ExemptTime == nil {
		var ret int32
		return ret
	}
	return *o.ExemptTime
}

// GetExemptTimeOk returns a tuple with the ExemptTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037QosPreempt) GetExemptTimeOk() (*int32, bool) {
	if o == nil || o.ExemptTime == nil {
		return nil, false
	}
	return o.ExemptTime, true
}

// HasExemptTime returns a boolean if a field has been set.
func (o *Dbv0037QosPreempt) HasExemptTime() bool {
	if o != nil && o.ExemptTime != nil {
		return true
	}

	return false
}

// SetExemptTime gets a reference to the given int32 and assigns it to the ExemptTime field.
func (o *Dbv0037QosPreempt) SetExemptTime(v int32) {
	o.ExemptTime = &v
}

func (o Dbv0037QosPreempt) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.List != nil {
		toSerialize["list"] = o.List
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.ExemptTime != nil {
		toSerialize["exempt_time"] = o.ExemptTime
	}
	return json.Marshal(toSerialize)
}

type NullableDbv0037QosPreempt struct {
	value *Dbv0037QosPreempt
	isSet bool
}

func (v NullableDbv0037QosPreempt) Get() *Dbv0037QosPreempt {
	return v.value
}

func (v *NullableDbv0037QosPreempt) Set(val *Dbv0037QosPreempt) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037QosPreempt) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037QosPreempt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037QosPreempt(val *Dbv0037QosPreempt) *NullableDbv0037QosPreempt {
	return &NullableDbv0037QosPreempt{value: val, isSet: true}
}

func (v NullableDbv0037QosPreempt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037QosPreempt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


